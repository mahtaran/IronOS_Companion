name: Shared set-up workflow
description: >-
  This workflow sets up the environment for the project,
  including Java and Flutter, and installs dependencies.

runs:
  using: composite

  steps:
    - name: Configure Android NDK version
      shell: bash
      run: |
        if [[ -n "$ANDROID_NDK_LATEST_HOME" ]]; then
          ndkVersion=$(basename "$ANDROID_NDK_LATEST_HOME")
          echo "Using NDK version: $ndkVersion"
          find . -type f -name "*.gradle*" -exec sed -i '' 's/flutter\.ndkVersion/"'"$ndkVersion"'"/g' {} +
        else
          echo "Warning: ANDROID_NDK_LATEST_HOME not set, skipping NDK configuration"
        fi

    - name: Calculate Android cache configuration
      id: android-cache-config
      shell: bash
      run: |
        if [[ -z "$ANDROID_HOME" || ! -d "$ANDROID_HOME/ndk" || ! -d "$ANDROID_HOME/cmake" ]]; then
          echo "No Android tools available for caching, skipping"
          echo "cache=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        inclusions=("$ANDROID_HOME/ndk" "$ANDROID_HOME/cmake")
        exclusions=($(find "${inclusions[@]}" -mindepth 1 -maxdepth 1 -type d))
        path=$(printf '%s/*\n' "${inclusions[@]}"; printf '!%s\n' "${exclusions[@]}")

        {
          echo "path<<EOF"
          echo "$path"
          echo "EOF"
          echo "hash=$(printf '%s' "$path" | shasum -a 256 | cut -d ' ' -f 1)"
          echo "cache=true"
        } >> $GITHUB_OUTPUT

    - name: Cache Android tools
      if: steps.android-cache-config.outputs.cache == 'true'
      uses: actions/cache@v4
      with:
        key: android-${{ runner.os }}-${{ runner.arch }}-${{ steps.android-cache-config.outputs.hash }}
        path: ${{ steps.android-cache-config.outputs.path }}

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
        cache: gradle

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        cache: true

    - name: Configure Flutter
      shell: bash
      run: |
        dart --disable-analytics
        flutter config --no-analytics --no-cli-animations

    - name: Install Flutter dependencies
      shell: bash
      run: flutter pub get
