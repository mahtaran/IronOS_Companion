name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: macos-latest

    uses: ./.github/workflows/set-up.yaml

    steps:
      - name: Decode keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "${KEYSTORE_BASE64}" | base64 --decode > android/keystore.jks

      - name: Create key.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "storePassword=${KEYSTORE_PASSWORD}" > android/key.properties
          echo "keyPassword=${KEY_PASSWORD}" >> android/key.properties
          echo "keyAlias=${KEY_ALIAS}" >> android/key.properties

      - name: Build APK
        run: flutter build apk

      - name: Build app bundle
        run: flutter build appbundle

      - name: Build IPA
        run: flutter build ios --no-codesign

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/app/outputs/flutter-apk/app-release.apk,
            build/app/outputs/bundle/release/app-release.aab,
            build/ios/ipa/*.ipa

  release:
    name: Release
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    environment: release
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for tag checking
          fetch-depth: 0

      - name: Extract version
        id: extract-version
        run: echo "$(grep -oP 'version:\s*\K[0-9.]+(-\w+)?' pubspec.yaml)" >> $GITHUB_OUTPUT

      - name: Download artifacts
        id: download-artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/

      - name: Create release
        env:
          VERSION: ${{ steps.extract-version.outputs.result }}
          ARTIFACTS_PATH: ${{ steps.download-artifacts.outputs.download-path }}
        run: |
          gh release create "v${VERSION}" \
            --generate-notes \
            "${ARTIFACTS_PATH}/*"
